{"version":3,"sources":["images/chatbot.png","components/chatBot.jsx","components/button.jsx","components/chatFooter.jsx","components/chats.jsx","App.js","index.js"],"names":["ChatBot","props","useState","displayBot","setBot","className","onMouseOver","onMouseLeave","src","botImg","alt","children","ButtonFeature","onClick","clickProp","class","emoji","ChatFooter","askQuestion","setQuestion","console","log","rows","onChange","e","target","value","userInput","Chats","human","bot","style","flexDirection","map","msg","i","App","userQue","askQue","botReply","tellReply","humanQue","prevQue","length","encodedParams","URLSearchParams","append","fetch","method","headers","body","then","response","json","prevReply","slice","out","catch","err","error","rootElement","document","getElementById","createRoot","render"],"mappings":"4NAAe,G,MAAA,IAA0B,qC,OCmC1BA,MA9Bf,SAAiBC,GACf,MAA6BC,oBAAS,GAAK,mBAApCC,EAAU,KAAEC,EAAM,KASzB,OACE,qBAAKC,UAAU,YAAW,SACxB,cAAC,IAAI,UACH,sBACEA,UAAU,aACVC,YAZR,WACEF,GAAO,EACT,EAWQG,aAVR,WACEH,GAAO,EACT,EAQ+B,UAEtBD,GACC,sBAAME,UAAU,UAAS,SACvB,qBAAKG,IAAKC,EAAQC,IAAI,QAGxBP,GAAcF,EAAMU,eAKhC,E,MCvBeC,MARf,SAAuBX,GACrB,OACE,wBAAQI,UAAU,SAASQ,QAASZ,EAAMa,UAAU,SAClD,mBAAGC,MAAOd,EAAMe,SAGtB,ECmBeC,MAvBf,SAAoBhB,GAClB,MAAmCC,mBAAS,IAAG,mBAAxCgB,EAAW,KAAEC,EAAW,KAa/B,OAXAC,QAAQC,IAAIH,GAYV,sBAAKb,UAAU,UAAS,UACtB,cAAC,EAAa,CAACW,MAAM,2BACrB,0BAAUM,KAAK,IAAIC,SAbvB,SAAyBC,GACvBL,EAAYK,EAAEC,OAAOC,MACvB,EAWkDA,MAAOR,IACrD,cAAC,EAAa,CAACF,MAAM,0BAA0BF,UAVnD,WACEM,QAAQC,IAAI,WACQ,KAAhBH,GAAoBjB,EAAM0B,UAAUT,GACxCC,EAAY,GACd,MASF,E,MCNeS,MAjBf,SAAe3B,GAGb,OAFAmB,QAAQC,IAAIpB,EAAM4B,OAClBT,QAAQC,IAAIpB,EAAM6B,KAEhB,qBAAKzB,UAAU,cAAa,SAC1B,qBAAK0B,MAAO,CAAEC,cAAe,kBAAmB,SAC7C/B,EAAM4B,MAAMI,KAAI,SAACC,EAAKC,GAAC,OACtB,qCACE,qBAAK9B,UAAU,YAAW,SAAE6B,IAC5B,sBAAK7B,UAAU,WAAU,UAAC,IAAEJ,EAAM6B,IAAIK,GAAG,SACxC,OAKb,ECwCeC,MApDf,WACE,MAA0BlC,mBAAS,IAAG,mBAA/BmC,EAAO,KAAEC,EAAM,KACtB,EAA8BpC,mBAAS,CAAC,QAAO,mBAAxCqC,EAAQ,KAAEC,EAAS,KAwC1B,OACE,8BACE,eAAC,EAAO,WACN,cAAC,EAAK,CAACX,MAAOQ,EAASP,IAAKS,IAC5B,cAAC,EAAU,CAACZ,UA1ClB,SAAoBc,GAClBrB,QAAQC,IAAIoB,GACZH,GAAO,SAACI,GACN,MAAM,GAAN,mBAAWA,GAAO,CAAED,GACtB,IACArB,QAAQC,IAAI,aAAegB,EAAQA,EAAQM,OAAS,IAEpD,IAAMC,EAAgB,IAAIC,gBAC1BD,EAAcE,OAAO,KAAML,GAC3BG,EAAcE,OAAO,KAAM,MAC3BF,EAAcE,OAAO,OAAQ,KAC7BF,EAAcE,OAAO,YAAa,aAClCF,EAAcE,OAAO,OAAQ,KAC7BF,EAAcE,OAAO,MAAO,kCAC5BF,EAAcE,OAAO,aAAc,YACnCF,EAAcE,OAAO,WAAY,KAYjCC,MAAM,0CAVU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oCAChB,iBAAkB,qDAClB,kBAAmB,+BAErBC,KAAMN,IAILO,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACC,GACLZ,GAAU,SAACc,GACT,MAAM,GAAN,mBAAWA,EAAUC,MAAM,GAAI,IAAE,CAAEH,EAASI,IAAK,OACnD,IACApC,QAAQC,IAAI+B,EAASI,IACvB,IACCC,OAAM,SAACC,GAAG,OAAKtC,QAAQuC,MAAMD,EAAI,GACtC,QAUF,EClDME,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.4f3bbef3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/chatbot.35621985.png\";","import React, { useState } from \"react\";\r\nimport Jump from \"react-reveal/Jump\";\r\nimport \"./chatBot.css\";\r\nimport botImg from \"../images/chatbot.png\";\r\n\r\nfunction ChatBot(props) {\r\n  const [displayBot, setBot] = useState(true);\r\n\r\n  function botSetDown() {\r\n    setBot(false);\r\n  }\r\n  function botSetUp() {\r\n    setBot(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jump>\r\n        <div\r\n          className=\"chatScreen\"\r\n          onMouseOver={botSetDown}\r\n          onMouseLeave={botSetUp}\r\n        >\r\n          {displayBot && (\r\n            <span className=\"chatbot\">\r\n              <img src={botImg} alt=\"\" />\r\n            </span>\r\n          )}\r\n          {!displayBot && props.children}\r\n        </div>\r\n      </Jump>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;\r\n","import React from \"react\";\r\n\r\nfunction ButtonFeature(props) {\r\n  return (\r\n    <button className=\"emojis\" onClick={props.clickProp}>\r\n      <i class={props.emoji}></i>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonFeature;\r\n","import React, { useState } from \"react\";\r\nimport \"./chatFooter.css\";\r\nimport ButtonFeature from \"./button\";\r\n\r\nfunction ChatFooter(props) {\r\n  const [askQuestion, setQuestion] = useState(\"\");\r\n\r\n  console.log(askQuestion);\r\n  function captureQuestion(e) {\r\n    setQuestion(e.target.value);\r\n  }\r\n\r\n  function sendMessage() {\r\n    console.log(\"clicked\");\r\n    if (askQuestion !== \"\") props.userInput(askQuestion);\r\n    setQuestion(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"Message\">\r\n      <ButtonFeature emoji=\"fa-solid fa-face-smile\" />\r\n      <textarea rows=\"2\" onChange={captureQuestion} value={askQuestion} />\r\n      <ButtonFeature emoji=\"fa-solid fa-paper-plane\" clickProp={sendMessage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatFooter;\r\n","import React from \"react\";\r\nimport \"./chats.css\";\r\nfunction Chats(props) {\r\n  console.log(props.human);\r\n  console.log(props.bot);\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div style={{ flexDirection: \"column-reverse\" }}>\r\n        {props.human.map((msg, i) => (\r\n          <>\r\n            <div className=\"user-chat\">{msg}</div>\r\n            <div className=\"bot-chat\"> {props.bot[i]} </div>\r\n          </>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n","import React, { useState } from \"react\";\nimport ChatBot from \"./components/chatBot.jsx\";\nimport ChatFooter from \"./components/chatFooter.jsx\";\nimport Chats from \"./components/chats.jsx\";\n\nfunction App() {\n  const [userQue, askQue] = useState([]);\n  const [botReply, tellReply] = useState([\"...\"]);\n\n  function AI_Process(humanQue) {\n    console.log(humanQue);\n    askQue((prevQue) => {\n      return [...prevQue, humanQue];\n    });\n    console.log(\"userQue : \" + userQue[userQue.length - 1]);\n\n    const encodedParams = new URLSearchParams();\n    encodedParams.append(\"in\", humanQue);\n    encodedParams.append(\"op\", \"in\");\n    encodedParams.append(\"cbot\", \"1\");\n    encodedParams.append(\"SessionID\", \"RapidAPI1\");\n    encodedParams.append(\"cbid\", \"1\");\n    encodedParams.append(\"key\", \"RHMN5hnQ4wTYZBGCF3dfxzypt68rVP\");\n    encodedParams.append(\"ChatSource\", \"RapidAPI\");\n    encodedParams.append(\"duration\", \"1\");\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n        \"X-RapidAPI-Key\": \"ae9f7bc949msh9e34b9ae718feb5p1f8692jsn2bee86e8b51f\",\n        \"X-RapidAPI-Host\": \"robomatic-ai.p.rapidapi.com\"\n      },\n      body: encodedParams\n    };\n\n    fetch(\"https://robomatic-ai.p.rapidapi.com/api\", options)\n      .then((response) => response.json())\n      .then((response) => {\n        tellReply((prevReply) => {\n          return [...prevReply.slice(0, -1), response.out, \"...\"];\n        });\n        console.log(response.out);\n      })\n      .catch((err) => console.error(err));\n  }\n\n  return (\n    <div>\n      <ChatBot>\n        <Chats human={userQue} bot={botReply} />\n        <ChatFooter userInput={AI_Process} />\n      </ChatBot>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}